# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

#Protocol statistic period reset
class ProtocolStatisticPeriodReset(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 4

    # ProtocolStatisticPeriodReset
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProtocolStatisticPeriodReset
    def Total(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # ProtocolStatisticPeriodReset
    def LastSecond(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 2)
        return obj


def CreateProtocolStatisticPeriodReset(builder, total_numRequests, total_numBytes, lastSecond_numRequests, lastSecond_numBytes):
    builder.Prep(1, 4)
    builder.Prep(1, 2)
    builder.PrependBool(lastSecond_numBytes)
    builder.PrependBool(lastSecond_numRequests)
    builder.Prep(1, 2)
    builder.PrependBool(total_numBytes)
    builder.PrependBool(total_numRequests)
    return builder.Offset()

import comm.ethercat.master.fbs.ProtocolStatisticResetFlags
try:
    from typing import Optional
except:
    pass

class ProtocolStatisticPeriodResetT(object):

    # ProtocolStatisticPeriodResetT
    def __init__(self):
        self.total = None  # type: Optional[comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlagsT]
        self.lastSecond = None  # type: Optional[comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlagsT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        protocolStatisticPeriodReset = ProtocolStatisticPeriodReset()
        protocolStatisticPeriodReset.Init(buf, pos)
        return cls.InitFromObj(protocolStatisticPeriodReset)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, protocolStatisticPeriodReset):
        x = ProtocolStatisticPeriodResetT()
        x._UnPack(protocolStatisticPeriodReset)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.total == other.total and \
            self.lastSecond == other.lastSecond

    # ProtocolStatisticPeriodResetT
    def _UnPack(self, protocolStatisticPeriodReset):
        if protocolStatisticPeriodReset is None:
            return
        if protocolStatisticPeriodReset.Total(comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlags()) is not None:
            self.total = comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlagsT.InitFromObj(protocolStatisticPeriodReset.Total(comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlags()))
        if protocolStatisticPeriodReset.LastSecond(comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlags()) is not None:
            self.lastSecond = comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlagsT.InitFromObj(protocolStatisticPeriodReset.LastSecond(comm.ethercat.master.fbs.ProtocolStatisticResetFlags.ProtocolStatisticResetFlags()))

    # ProtocolStatisticPeriodResetT
    def Pack(self, builder):
        return CreateProtocolStatisticPeriodReset(builder, self.total.numRequests, self.total.numBytes, self.lastSecond.numRequests, self.lastSecond.numBytes)
