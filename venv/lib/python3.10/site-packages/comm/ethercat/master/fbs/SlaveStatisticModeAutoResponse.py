# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

#This node retrieves the auto mode configuration of the slave statistic functionality
class SlaveStatisticModeAutoResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SlaveStatisticModeAutoResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSlaveStatisticModeAutoResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SlaveStatisticModeAutoResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    #Slave statistic enabled
    # SlaveStatisticModeAutoResponse
    def Enable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    #Actual collection idle time in milliseconds
    # SlaveStatisticModeAutoResponse
    def IdleTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def SlaveStatisticModeAutoResponseStart(builder): builder.StartObject(2)
def Start(builder):
    return SlaveStatisticModeAutoResponseStart(builder)
def SlaveStatisticModeAutoResponseAddEnable(builder, enable): builder.PrependBoolSlot(0, enable, 0)
def AddEnable(builder, enable):
    return SlaveStatisticModeAutoResponseAddEnable(builder, enable)
def SlaveStatisticModeAutoResponseAddIdleTime(builder, idleTime): builder.PrependUint32Slot(1, idleTime, 0)
def AddIdleTime(builder, idleTime):
    return SlaveStatisticModeAutoResponseAddIdleTime(builder, idleTime)
def SlaveStatisticModeAutoResponseEnd(builder): return builder.EndObject()
def End(builder):
    return SlaveStatisticModeAutoResponseEnd(builder)

class SlaveStatisticModeAutoResponseT(object):

    # SlaveStatisticModeAutoResponseT
    def __init__(self):
        self.enable = False  # type: bool
        self.idleTime = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        slaveStatisticModeAutoResponse = SlaveStatisticModeAutoResponse()
        slaveStatisticModeAutoResponse.Init(buf, pos)
        return cls.InitFromObj(slaveStatisticModeAutoResponse)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, slaveStatisticModeAutoResponse):
        x = SlaveStatisticModeAutoResponseT()
        x._UnPack(slaveStatisticModeAutoResponse)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.enable == other.enable and \
            self.idleTime == other.idleTime

    # SlaveStatisticModeAutoResponseT
    def _UnPack(self, slaveStatisticModeAutoResponse):
        if slaveStatisticModeAutoResponse is None:
            return
        self.enable = slaveStatisticModeAutoResponse.Enable()
        self.idleTime = slaveStatisticModeAutoResponse.IdleTime()

    # SlaveStatisticModeAutoResponseT
    def Pack(self, builder):
        SlaveStatisticModeAutoResponseStart(builder)
        SlaveStatisticModeAutoResponseAddEnable(builder, self.enable)
        SlaveStatisticModeAutoResponseAddIdleTime(builder, self.idleTime)
        slaveStatisticModeAutoResponse = SlaveStatisticModeAutoResponseEnd(builder)
        return slaveStatisticModeAutoResponse
