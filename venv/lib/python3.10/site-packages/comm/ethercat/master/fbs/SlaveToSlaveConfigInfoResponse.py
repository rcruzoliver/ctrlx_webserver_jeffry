# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

#Slave to slave configuration information response
class SlaveToSlaveConfigInfoResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SlaveToSlaveConfigInfoResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSlaveToSlaveConfigInfoResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SlaveToSlaveConfigInfoResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    #Slave to slave copy configured
    # SlaveToSlaveConfigInfoResponse
    def ProcessDataCopy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    #Slave to slave copy mode for process data communication
    # SlaveToSlaveConfigInfoResponse
    def ProcessDataCopyMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def SlaveToSlaveConfigInfoResponseStart(builder): builder.StartObject(2)
def Start(builder):
    return SlaveToSlaveConfigInfoResponseStart(builder)
def SlaveToSlaveConfigInfoResponseAddProcessDataCopy(builder, processDataCopy): builder.PrependBoolSlot(0, processDataCopy, 0)
def AddProcessDataCopy(builder, processDataCopy):
    return SlaveToSlaveConfigInfoResponseAddProcessDataCopy(builder, processDataCopy)
def SlaveToSlaveConfigInfoResponseAddProcessDataCopyMode(builder, processDataCopyMode): builder.PrependUint32Slot(1, processDataCopyMode, 0)
def AddProcessDataCopyMode(builder, processDataCopyMode):
    return SlaveToSlaveConfigInfoResponseAddProcessDataCopyMode(builder, processDataCopyMode)
def SlaveToSlaveConfigInfoResponseEnd(builder): return builder.EndObject()
def End(builder):
    return SlaveToSlaveConfigInfoResponseEnd(builder)

class SlaveToSlaveConfigInfoResponseT(object):

    # SlaveToSlaveConfigInfoResponseT
    def __init__(self):
        self.processDataCopy = False  # type: bool
        self.processDataCopyMode = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        slaveToSlaveConfigInfoResponse = SlaveToSlaveConfigInfoResponse()
        slaveToSlaveConfigInfoResponse.Init(buf, pos)
        return cls.InitFromObj(slaveToSlaveConfigInfoResponse)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, slaveToSlaveConfigInfoResponse):
        x = SlaveToSlaveConfigInfoResponseT()
        x._UnPack(slaveToSlaveConfigInfoResponse)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.processDataCopy == other.processDataCopy and \
            self.processDataCopyMode == other.processDataCopyMode

    # SlaveToSlaveConfigInfoResponseT
    def _UnPack(self, slaveToSlaveConfigInfoResponse):
        if slaveToSlaveConfigInfoResponse is None:
            return
        self.processDataCopy = slaveToSlaveConfigInfoResponse.ProcessDataCopy()
        self.processDataCopyMode = slaveToSlaveConfigInfoResponse.ProcessDataCopyMode()

    # SlaveToSlaveConfigInfoResponseT
    def Pack(self, builder):
        SlaveToSlaveConfigInfoResponseStart(builder)
        SlaveToSlaveConfigInfoResponseAddProcessDataCopy(builder, self.processDataCopy)
        SlaveToSlaveConfigInfoResponseAddProcessDataCopyMode(builder, self.processDataCopyMode)
        slaveToSlaveConfigInfoResponse = SlaveToSlaveConfigInfoResponseEnd(builder)
        return slaveToSlaveConfigInfoResponse
