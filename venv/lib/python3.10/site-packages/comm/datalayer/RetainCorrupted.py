# automatically generated by the FlatBuffers compiler, do not modify

# namespace: datalayer

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RetainCorrupted(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # RetainCorrupted
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Start byte offset of corrupted nvram area
    # RetainCorrupted
    def Begin(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # End byte offset of corrupted nvram area
    # RetainCorrupted
    def End(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))

def CreateRetainCorrupted(builder, begin, end):
    builder.Prep(4, 8)
    builder.PrependUint32(end)
    builder.PrependUint32(begin)
    return builder.Offset()


class RetainCorruptedT(object):

    # RetainCorruptedT
    def __init__(self):
        self.begin = 0  # type: int
        self.end = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        retainCorrupted = RetainCorrupted()
        retainCorrupted.Init(buf, pos)
        return cls.InitFromObj(retainCorrupted)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, retainCorrupted):
        x = RetainCorruptedT()
        x._UnPack(retainCorrupted)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.begin == other.begin and \
            self.end == other.end

    # RetainCorruptedT
    def _UnPack(self, retainCorrupted):
        if retainCorrupted is None:
            return
        self.begin = retainCorrupted.Begin()
        self.end = retainCorrupted.End()

    # RetainCorruptedT
    def Pack(self, builder):
        return CreateRetainCorrupted(builder, self.begin, self.end)
